When would you want to use a remote repository rather than keeping all your work
local?
When you like to share your repository with others or especially for open source projects. In these cases more than one developer likes to have access an contribute to a repository, so a remote repository is a good idea.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Because you only have full control of your work, if you pull changes manually. Moreover you would need to stay connected with the internet all the time and without a info message you would still not know, if the repository changed to a newer version.

Describe the differences between forks, clones, and branches. When yould you use one instead of another?
You can fork a repository from another Github user to create a copy of that repository on your own Github account. If your clone a repository you set up a copy of a repository from Github on your local disc. If you add a new branch you create a modified version of a repository which you can merge at a later time with the original version, if you want so.

What is the benefit of having a copy of the last known state of the remote stored locally?
If you make a change and want to pull it, it will problably result in a fast forward merge. Although you have to deal less with data inconsistencies.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Without Git and GitHub collaborating would still be possible but only with a lot of coordination. If you can't use all the useful functions of git, you have to do it all manually.

When would you want to make changes in as separate branch rather than directly in master? What benefits does each approch have?
If you make changes in a branch, you afterwards can push the branch to github an start a pull request to incolude cour branch in the master. This has the advantage, that with the pull request there will be a check, if the changes work. If you work directly in master and push it to github there won't be a separate check.